{"version":3,"file":"static/js/99.5d134135.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/s3-UI/components/c1-features/f3-main/Messages/messages.module.css?79bc","webpack://samurai-way/./src/s3-UI/components/c1-features/f3-main/Messages/Dialogs/dialogs.module.css?870f","webpack://samurai-way/./src/s3-UI/components/c1-features/f3-main/Messages/Dialogs/Message/message.module.css?de4b","s3-UI/components/c1-features/f3-main/Messages/Dialogs/Message/Message.tsx","s3-UI/components/c1-features/f3-main/Messages/Dialogs/Dialogs.tsx","s3-UI/components/c1-features/f3-main/Messages/Dialogs/DialogsContainer.tsx","s3-UI/components/c1-features/f3-main/Messages/messages.tsx","s3-UI/hoc/WithAuthRedirect.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"messages_messages__PIOzz\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"dialogs_dialogs__bepWt\",\"dialogsBody\":\"dialogs_dialogsBody__J7cAd\",\"dialogsBody_container\":\"dialogs_dialogsBody_container__evqDh\",\"dialogsInput\":\"dialogs_dialogsInput__iSvPZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"message_message__4lFYp\",\"myMessage\":\"message_myMessage__VH+ID\"};","import React from 'react';\r\nimport s from \"./message.module.css\";\r\nimport friendImg from '../../../../../../../s4-common/assets/pictures/friendImg.png'\r\n\r\ntype MessagePropsType = {\r\n    id: number\r\n    message: { messageText: string, userId: number }\r\n    myMessages: boolean\r\n    userPhoto: string | null | undefined\r\n\r\n}\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n\r\n    const finalClassName = props.myMessages ? `${s.message} ${s.myMessage}` : `${s.message}`\r\n\r\n\r\n    if (props.message.userId === 1) {\r\n        return <div className={finalClassName}>\r\n            {props.myMessages && <div style={{textAlign: 'right'}}>\r\n                <span className={s.dialog}>{props.message.messageText}</span>\r\n                <img\r\n                    src={props.userPhoto ? props.userPhoto : 'https://i.pinimg.com/736x/1e/e4/9c/1ee49c569ceea55206d0c05bdaa8be32.jpg'}/>\r\n            </div>}\r\n            {!props.myMessages && <div style={{textAlign: 'left'}}>\r\n                <img src={props.userPhoto ? props.userPhoto : 'https://i.pinimg.com/736x/1e/e4/9c/1ee49c569ceea55206d0c05bdaa8be32.jpg'}/>\r\n                <span className={s.dialog}>{props.message.messageText} </span>\r\n            </div>}\r\n        </div>\r\n    } else {\r\n        return <div className={finalClassName}>\r\n            {!props.myMessages && <div style={{textAlign: 'right'}}>\r\n                <span className={s.dialog}>{props.message.messageText}</span>\r\n                <img src={friendImg}/>\r\n            </div>}\r\n            {props.myMessages && <div style={{textAlign: 'left'}}>\r\n                <img src={friendImg}/>\r\n                <span className={s.dialog}>{props.message.messageText} </span>\r\n            </div>}\r\n        </div>\r\n    }\r\n\r\n    // return (\r\n    //     <div className={finalClassName}>\r\n    //         {props.message.userId === 1 && <>\r\n    //          <span className={s.dialog}>{props.message.messageText}</span>\r\n    //             <img src={friendImg}/>\r\n    //         </>}\r\n    //         {props.message.userId === 2 && <>\r\n    //             <img src={friendImg}/>\r\n    //             <span className={s.dialog}>{props.message.messageText} </span>\r\n    //         </>}\r\n    //     </div>\r\n    // );\r\n};\r\n\r\nexport default Message;","import React, {ChangeEvent, createRef, useEffect, useRef, useState} from 'react';\r\nimport s from './dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n\r\n    const [newMessage, setNewMessage] = useState<string>('')\r\n\r\n    const onClickButtonSendHandler = () => {\r\n        props.addNewMessageActionCreator(newMessage, props.myMessages ? 1 : 2)\r\n        setNewMessage('')\r\n    }\r\n\r\n    const messageRef = useRef<HTMLDivElement>(null)\r\n\r\n    useEffect(() => {\r\n            const domNode = messageRef.current;\r\n            if (domNode) {\r\n                domNode.scrollTop = domNode.scrollHeight;\r\n            }\r\n        }\r\n        , [props.dialogs]);\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsBody} ref={messageRef}>\r\n                <div className={s.dialogsBody_container}>\r\n                    {props.dialogs.map((m) =>\r\n                        <Message key={m.id} id={m.id} message={m.message} myMessages={props.myMessages}\r\n                                 userPhoto={props.userPhoto}/>)}\r\n                </div>\r\n\r\n            </div>\r\n            <div className={s.dialogsInput}>\r\n\r\n                <input name={'newMessageBody'}\r\n                       value={newMessage}\r\n                       onChange={(e) => setNewMessage(e.currentTarget.value)}\r\n                />\r\n                <button disabled={newMessage.length === 0}\r\n                        type={'submit'}\r\n                        onClick={onClickButtonSendHandler}>\r\n                    Send message\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;\r\n\r\n","import React from 'react';\r\nimport {addNewMessageActionCreator, messageDataType} from \"../../../../../../s2-BLL/message-page-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../../../s2-BLL/redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {WithAuthRedirect} from \"../../../../../hoc/WithAuthRedirect\";\r\n\r\n\r\ntype PropsType = {\r\n    myMessage: boolean\r\n}\r\n\r\nexport type mapStateToPropsType = {\r\n    dialogs: messageDataType[]\r\n    myMessages: boolean\r\n    userPhoto: string | null | undefined\r\n}\r\n\r\nexport type mapDispatchToPropsType = {\r\n    addNewMessageActionCreator: (newMessage: string, value: number) => void\r\n}\r\n\r\nexport type DialogsPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType, myMessages: PropsType): mapStateToPropsType => {\r\n    return {\r\n        dialogs: state.messagePages.dialogs,\r\n        myMessages: myMessages.myMessage,\r\n        userPhoto: state.profilePages.profile?.photos.small\r\n    }\r\n}\r\n\r\n\r\nexport const DialogsContainer = compose<React.ComponentType<PropsType>>(\r\n    connect(mapStateToProps, {addNewMessageActionCreator}),\r\n    WithAuthRedirect,\r\n)(Dialogs)\r\n\r\n","import React from 'react';\r\nimport s from \"./messages.module.css\"\r\nimport {DialogsContainer} from \"./Dialogs/DialogsContainer\";\r\n\r\nconst Messages = () => {\r\n\r\n    return (\r\n        <div className={s.messages}>\r\n            {/*<ContactsContainer/>*/}\r\n            <DialogsContainer myMessage={true}/>\r\n            <DialogsContainer myMessage={false}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Messages;","import React, {ComponentType} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../s2-BLL/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\ntype mapStateToPropsRedirectType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToPropsRedirect = (state: AppStateType): mapStateToPropsRedirectType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function WithAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: mapStateToPropsRedirectType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) {\r\n            return <Redirect to={'/c3-login'}/>\r\n        }\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n};\r\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["props","finalClassName","myMessages","s","message","userId","className","style","textAlign","messageText","src","userPhoto","friendImg","useState","newMessage","setNewMessage","messageRef","useRef","useEffect","domNode","current","scrollTop","scrollHeight","dialogs","ref","map","m","id","name","value","onChange","e","currentTarget","disabled","length","type","onClick","addNewMessageActionCreator","DialogsContainer","compose","connect","state","messagePages","myMessage","profilePages","profile","photos","small","WithAuthRedirect","Dialogs","mapStateToPropsRedirect","isAuth","auth","Component","restProps","to","_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}